// <auto-generated />
using System;
using BookCatalogApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookCatalogApp.Migrations
{
    [DbContext(typeof(LibraryContext))]
    partial class LibraryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookCatalogApp.Models.Entities.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("BorrowDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BorrowerName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CoverImageFileName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CoverImageUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("MediaTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("QRCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("BorrowerName")
                        .HasDatabaseName("IX_Items_BorrowerName");

                    b.HasIndex("MediaTypeId");

                    b.HasIndex("Title")
                        .HasDatabaseName("IX_Items_Title");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "J.R.R. Tolkien",
                            CreatedAt = new DateTime(2023, 6, 15, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            Description = "Klasická fantasy kniha o dobrodružství hobita Bilba Pytlíka",
                            MediaTypeId = 1,
                            PurchaseDate = new DateTime(2023, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Hobit aneb Cesta tam a zase zpátky"
                        },
                        new
                        {
                            Id = 2,
                            Author = "George Orwell",
                            CreatedAt = new DateTime(2024, 3, 20, 14, 15, 0, 0, DateTimeKind.Unspecified),
                            Description = "Dystopický román o totalitním režimu a kontrole společnosti",
                            MediaTypeId = 1,
                            PurchaseDate = new DateTime(2024, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "1984"
                        },
                        new
                        {
                            Id = 3,
                            Author = "Antoine de Saint-Exupéry",
                            BorrowDate = new DateTime(2025, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BorrowerName = "Jana Nováková",
                            CreatedAt = new DateTime(2023, 1, 10, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Poetická kniha pro děti i dospělé o přátelství a lásce",
                            MediaTypeId = 1,
                            PurchaseDate = new DateTime(2023, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Malý princ"
                        },
                        new
                        {
                            Id = 4,
                            Author = "Pink Floyd",
                            CreatedAt = new DateTime(2022, 8, 5, 16, 45, 0, 0, DateTimeKind.Unspecified),
                            Description = "Legendární rockové album o izolaci a společenských bariérách",
                            MediaTypeId = 2,
                            PurchaseDate = new DateTime(2022, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Wall"
                        },
                        new
                        {
                            Id = 5,
                            Author = "Michael Jackson",
                            BorrowDate = new DateTime(2025, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BorrowerName = "Petr Svoboda",
                            CreatedAt = new DateTime(2023, 11, 12, 11, 20, 0, 0, DateTimeKind.Unspecified),
                            Description = "Nejprodávanější album všech dob s hity jako Billie Jean",
                            MediaTypeId = 2,
                            PurchaseDate = new DateTime(2023, 11, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Thriller"
                        },
                        new
                        {
                            Id = 6,
                            Author = "Queen",
                            CreatedAt = new DateTime(2022, 3, 25, 13, 30, 0, 0, DateTimeKind.Unspecified),
                            Description = "Sběratelské vydání nejlepších hitů legendární kapely Queen",
                            MediaTypeId = 2,
                            PurchaseDate = new DateTime(2022, 3, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Bohemian Rhapsody"
                        },
                        new
                        {
                            Id = 7,
                            Author = "Robert Zemeckis",
                            CreatedAt = new DateTime(2023, 9, 8, 15, 10, 0, 0, DateTimeKind.Unspecified),
                            Description = "Dojemný příběh o muži s nízkým IQ a jeho neobyčejném životě",
                            MediaTypeId = 3,
                            PurchaseDate = new DateTime(2023, 9, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Forrest Gump"
                        },
                        new
                        {
                            Id = 8,
                            Author = "Lana a Lilly Wachowski",
                            CreatedAt = new DateTime(2024, 2, 14, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Sci-fi klasika o virtuální realitě a boji za svobodu",
                            MediaTypeId = 3,
                            PurchaseDate = new DateTime(2024, 2, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Matrix"
                        },
                        new
                        {
                            Id = 9,
                            Author = "James Cameron",
                            BorrowDate = new DateTime(2025, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BorrowerName = "Marie Svobodová",
                            CreatedAt = new DateTime(2021, 12, 1, 18, 45, 0, 0, DateTimeKind.Unspecified),
                            Description = "Epický romantický film o tragédii nejslavnější lodi světa",
                            MediaTypeId = 3,
                            PurchaseDate = new DateTime(2021, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Titanic"
                        },
                        new
                        {
                            Id = 10,
                            Author = "Peter Jackson",
                            CreatedAt = new DateTime(2022, 7, 18, 20, 15, 0, 0, DateTimeKind.Unspecified),
                            Description = "První díl epické fantasy trilogie podle knihy J.R.R. Tolkiena",
                            MediaTypeId = 3,
                            PurchaseDate = new DateTime(2022, 7, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Pán prstenů: Společenstvo prstenu"
                        });
                });

            modelBuilder.Entity("BookCatalogApp.Models.Entities.MediaType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ColorClass")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("IconClass")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("MediaTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ColorClass = "primary",
                            IconClass = "fas fa-book",
                            Name = "Kniha"
                        },
                        new
                        {
                            Id = 2,
                            ColorClass = "success",
                            IconClass = "fas fa-compact-disc",
                            Name = "CD"
                        },
                        new
                        {
                            Id = 3,
                            ColorClass = "warning",
                            IconClass = "fas fa-film",
                            Name = "DVD"
                        });
                });

            modelBuilder.Entity("BookCatalogApp.Models.Entities.Item", b =>
                {
                    b.HasOne("BookCatalogApp.Models.Entities.MediaType", "MediaType")
                        .WithMany("Items")
                        .HasForeignKey("MediaTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MediaType");
                });

            modelBuilder.Entity("BookCatalogApp.Models.Entities.MediaType", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
